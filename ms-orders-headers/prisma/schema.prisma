// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDIENTE
  ENTREGADA
  SOLICITADA
  CANCELADA
}

model TBL_PURCHASE_ORDER {
  id           Int         @id @default(autoincrement())
  factureCode  String      @unique @db.VarChar(50)
  totalAmount  Float
  totalItems   Int
  status       OrderStatus @default(PENDIENTE)
  paid         Boolean     @default(false)
  paidAt       DateTime?
  description  String?     @db.Text
  userCreateAt String?     @db.VarChar(30)
  createDateAt DateTime?
  userUpdateAt String?     @db.VarChar(30)
  updateDateAt DateTime?

  OrderItems TBL_PURCHARSE_ORDER_ITEMS[]
}

model TBL_PURCHARSE_ORDER_ITEMS {
  id              Int     @id @default(autoincrement())
  productId       Int //Referencia al ID de Producto en su respectivo microservicio
  quantity        Int
  price           Float //Aunque lo podemos sacar de productos, esto podr√≠a variar con el tiempo, es mejor congelarlo
  size            String
  color           String
  isDiscount      Boolean @default(false)
  percentDiscount Float

  TBL_PURCHASE_ORDER TBL_PURCHASE_ORDER? @relation(fields: [orderPurchaseId], references: [id])
  orderPurchaseId    Int?
}
